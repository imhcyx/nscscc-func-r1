#include <asm.h>
#include <regdef.h>

#define TEST_MSUB(in_a, in_b, in_c, in_d, ref_lo, ref_hi) \
    li t0, in_a; \
    li t1, in_b; \
    li a0, in_c; \
    li a1, in_d; \
    mult t0, t1; \
    msub a0, a1; \
    mflo v1; \
    li v0, ref_lo; \
    bne v0, v1, inst_error; \
    nop; \
    mfhi v1; \
    li v0, ref_hi; \
    bne v0, v1, inst_error; \
    nop

LEAF(msub_test)
    .set noreorder
    addiu s0, s0, 1
###test inst
    TEST_MSUB(0x8d1c01ec, 0x3469e966, 0x1cfedb4f, 0xcecf22a1, 0x746b2559, 0xee0c78f7)
    TEST_MSUB(0xe82e2818, 0xfa2e7870, 0xe10069a8, 0xd8fae7df, 0x8e8a2928, 0xfbd10a54)
    TEST_MSUB(0x93659849, 0xcb3242e0, 0x7ea8449d, 0x4b7e3efe, 0x9b91f81a, 0xf10ce2db)
    TEST_MSUB(0xa58233a0, 0xc40b4f9d, 0xe492a4b3, 0xf10676c2, 0x386ab77a, 0x1396c54a)
    TEST_MSUB(0x62fb2633, 0x0a85f3c2, 0xa0cd2102, 0x0289cf5f, 0x06327de8, 0x05033f4d)
    TEST_MSUB(0x6165b820, 0x5b102216, 0x91db9af8, 0xa81ac40e, 0x2959b930, 0xfcd44d18)
    TEST_MSUB(0x66cedb88, 0x26484510, 0x122b8327, 0xab61c4ba, 0xd98b3a2a, 0x15613c98)
    TEST_MSUB(0x439403b5, 0x54f1fbaf, 0xbd85257d, 0x2c34de80, 0xe0bcdb3b, 0x21e74a49)
    TEST_MSUB(0x17ce7314, 0xae8674bd, 0xdfc045fc, 0x22533a29, 0x65adb868, 0xfcbf52c0)
    TEST_MSUB(0xd809d452, 0xacddaf35, 0x2893dfeb, 0x9b38330c, 0x3404b2f6, 0x1cf39a5f)
    TEST_MSUB(0xf4087c8a, 0x2bed965d, 0x1afb8ae5, 0x76476937, 0x0e4a55ef, 0xf17ad8df)
    TEST_MSUB(0x38e99dda, 0x38836305, 0x81a391c2, 0x2a1e8380, 0x7d0e3c42, 0x215a89ea)
    TEST_MSUB(0x1c4ca9de, 0x5b031a9a, 0x9e276e83, 0xbef734b9, 0x8fa242e1, 0xf1343ed1)
    TEST_MSUB(0xe898917c, 0x09edce7a, 0xffd96685, 0xbad6413e, 0x2ab683e2, 0xff0d31d2)
    TEST_MSUB(0xb3991978, 0x96987d5f, 0xe3a05d83, 0xc467b1b3, 0xe10215ef, 0x18da2d07)
    TEST_MSUB(0x6909161d, 0xdb9b01ff, 0x94b6ec7c, 0x322da571, 0x86bbd527, 0x0618b01d)
    TEST_MSUB(0x959804f7, 0x63f47003, 0x9552dd56, 0x6b4f290e, 0xd3db3e31, 0x032b8a47)
    TEST_MSUB(0xecd538f9, 0xce53fa8a, 0x84b70db4, 0x09305b87, 0xc727aa4e, 0x0824eb84)
    TEST_MSUB(0xf8ed11ad, 0x748f3376, 0x78a5aa0d, 0x1c060fed, 0x6ccb6bb5, 0xef927d06)
    TEST_MSUB(0xb5c9fd16, 0xdff19423, 0x1698b9ab, 0x4cb72059, 0x9d19658f, 0x02856d6f)
    TEST_MSUB(0x590efb4a, 0x54475c71, 0xa0b4390f, 0xc1227601, 0x1572609b, 0x05eaebcd)
    TEST_MSUB(0xa6c73b57, 0xf27cc93d, 0x0f31acc5, 0x9e8b853a, 0x8239f519, 0x0a7e5961)
    TEST_MSUB(0xa1e43335, 0x06e22f86, 0xbf535563, 0xd4d6329b, 0x9abf7fcd, 0xf290a2fc)
    TEST_MSUB(0x5896d6ed, 0x7ffb2fa9, 0x41a4bd79, 0x72038641, 0x79fbf3bc, 0x0f0d7d47)
    TEST_MSUB(0xdaf0b48c, 0x719fa87a, 0xe6e1f481, 0x836257ec, 0xfd5eaccc, 0xe3531d51)
    TEST_MSUB(0x8cdf1d64, 0x40a33ef4, 0xe117357f, 0xb907c965, 0xbfd06935, 0xda5cbd9d)
    TEST_MSUB(0x8527ae28, 0x4cf100b1, 0xfb40ea6a, 0x550b2889, 0x052b66ee, 0xdca7c8db)
    TEST_MSUB(0x28d2f035, 0xf798348e, 0xfb53cc50, 0x11daa800, 0xf60f8166, 0xfefc4851)
    TEST_MSUB(0xf10f2f39, 0x72518441, 0xa2122f86, 0xe19df6f5, 0xdbfd223b, 0xee2e2a53)
    TEST_MSUB(0xac88576f, 0xd1722fab, 0xeaf6741c, 0xd05b37f7, 0x28ddbd21, 0x0b4371e2)
###score ++
    addiu s3, s3, 1
###output (s0<<24)|s3
inst_error:  
    sll t1, s0, 24
    or t0, t1, s3 
    sw t0, 0(s1)
    jr ra
    nop
END(msub_test)
